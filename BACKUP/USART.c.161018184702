#include <iom128v.h>
#include "basic.h"
#include "USART.h"


//发送字符数组 
uchar TxCharBuf[128];
uchar TxCharNum, TxS;
//接收字符数组
uchar RxCharBuf[16];
uchar RxCharNum, RxBufWr, RxBufRd;


//***********************************************************************
// 串口1初始化接口函数
// 初始化uart,查询方式读写
//***********************************************************************
void UART1_Init(void)
{
    UCSR1B = (1 << RXEN1) | (1 << TXEN1) | (1 << RXCIE1); //发送接收使能、接收结束中断使能
	UCSR1A = 0x00;
    UBRR1H = baud_h;                      //写波特率的值
    UBRR1L = baud_l; 
	
}

//***********************************************************************
// 串口0初始化接口函数
// 初始化uart,查询方式读写
//***********************************************************************
void UART0_Init(void)
{
    UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0); //发送接收使能、接收结束中断使能
	UCSR0A = 0x00;
    UBRR0H = baud_h;                      //写波特率的值
    UBRR0L = baud_l;
	
	RxBufWr = 0;
	RxBufRd = 0;	
}

//***********************************************************************
// 用于输出的标准格式函数，用printf输出到UART1
//***********************************************************************
uchar putchar_usart1(uchar c)
{
    while ( !(UCSR1A & (1<<UDRE1)) )   // UDRE, data register empty
        ;
    UDR1 = c;
    return c;
}

//***********************************************************************
// 用于输出的标准格式函数，用printf输出到UART0
//***********************************************************************
uchar putchar_usart0(uchar c)
{
    while ( !(UCSR0A & (1<<UDRE0)) )   // UDRE, data register empty
        ;
    UDR0 = c;
    return c;
}
	
//***********************************************************************
// 用于输入的标准格式函数，用getchar通过UART1输入到单片机，代替C中的scanf
//***********************************************************************
uchar getchar_usart1(void)
{
 	uchar re;
    // while ((UCSR1A & 0x80) == 0);
   	if((UCSR0A & 0x80) == 1)
        re = UDR0;
	else 
		re = ' ';
	return re;
}

//***********************************************************************
// 用于输入的标准格式函数，用getchar通过UART0输入到单片机，代替C中的scanf
//***********************************************************************
uchar getchar_usart0(void)
{
 	 uchar re;
     //while ((UCSR0A & 0x80) == 0);
	 if((UCSR0A & 0x80) == 1)
        re = UDR0;
	 else 
		re = ' ';
	 return re;
}  
	
//***********************************************************************
// USART0发送字符串数据
//***********************************************************************
void puts0(uchar *s)
{
 	while(*s)
	{
	 	putchar_usart0(*s);
		s++;
	}
	putchar_usart0(0x0a);
	putchar_usart0(0x0d);
}

//***********************************************************************
// USART1接收字符串数据
//***********************************************************************
void gets1(void)
{
 	
	do{
	 	RxCharBuf[RxCharNum] = getchar_usart1();
		RxCharNum++;
	}while(RxCharBuf[RxCharNum-1] == ' ');
}

//***********************************************************************
// USART1中断接收字符串
//***********************************************************************
#pragma interrupt_handler usart0_RX_interrupt:iv_USART0_RX  //  19
void usart0_RX_interrupt(void)
{
    RxCharBuf[RxBufWr] = UDR0;  //从数据缓冲器中接收数据
	RxBufWr++;
 	RxBufWr &= 0x0f;
}