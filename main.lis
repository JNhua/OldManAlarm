                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile main.c
 0000                   .dbfile E:\git\AVR\OldManAlarm\main.c
 0000                   .dbfunc e welcomeDisplay _welcomeDisplay fV
                        .even
 0000           _welcomeDisplay::
 0000                   .dbline -1
 0000                   .dbline 39
 0000           ; //DMAVR-128开发板12864型液晶显示实时时钟驱动程序
 0000           ; //编译环境 编译环境 ICCAVR 7.16A
 0000           ; //系统时钟7.3728MHZ，设置熔丝位为外部高频石英晶体振荡，启动时间4.1ms
 0000           ; //作者：阿迪 www.avrgcc.com
 0000           ; //日期：2010.12.112
 0000           ; 
 0000           ; //***********************************************************************
 0000           ; //                    包含文件
 0000           ; //***********************************************************************
 0000           ; 
 0000           ; #include <string.h>
 0000           ; #include <stdio.h>
 0000           ; #include <macros.h>
 0000           ; #include <AVRdef.h>
 0000           ; #include <iom128v.h>
 0000           ; #include "DS18B20.h"    //温度传感器
 0000           ; #include "basic.h"      //基础函数
 0000           ; #include "12864time.h"  //DS1302时钟
 0000           ; #include "LCD.h"        //12864LCD显示屏
 0000           ; #include "USART.h"
 0000           ; #include "SYN7318.h"
 0000           ; #include "ESP8266.h"    
 0000           ; 
 0000           ; extern uchar RxCharBuf[16];
 0000           ; extern uchar RxCharNum, RxBufWr, RxBufRd;
 0000           ; extern uchar TxCharBuf[128];
 0000           ; extern uchar TxCharNum,TxStrLen;
 0000           ; 
 0000           ; extern uchar RxCharBuf_wifi[16];
 0000           ; extern uchar RxCharNum_wifi, RxBufWr_wifi, RxBufRd_wifi;
 0000           ; extern uchar TxCharBuf_wifi[128];
 0000           ; extern uchar TxCharNum_wifi,TxStrLen_wifi;
 0000           ; 
 0000           ;  
 0000           ; //****************************************************************
 0000           ; //  显示欢迎信息
 0000           ; //****************************************************************
 0000           ; void welcomeDisplay(void)
 0000           ; {
 0000                   .dbline 40
 0000           ;       DisplayCgrom(0x90,"欢迎使用独居老人");
 0000 20E0              ldi R18,<L2
 0002 30E0              ldi R19,>L2
 0004 00E9              ldi R16,144
 0006 0E940000          xcall _DisplayCgrom
 000A                   .dbline 41
 000A           ;       delay_nms(100);
 000A 04E6              ldi R16,100
 000C 10E0              ldi R17,0
 000E 0E940000          xcall _delay_nms
 0012                   .dbline 42
 0012           ;       DisplayCgrom(0x8a,"预警系统");
 0012 20E0              ldi R18,<L3
 0014 30E0              ldi R19,>L3
 0016 0AE8              ldi R16,138
 0018 0E940000          xcall _DisplayCgrom
 001C                   .dbline 43
 001C           ;       delay_nms(3000);
 001C 08EB              ldi R16,3000
 001E 1BE0              ldi R17,11
 0020 0E940000          xcall _delay_nms
 0024                   .dbline 44
 0024           ;       LCD_clear();                                  //清屏
 0024                   .dbline -2
 0024           L1:
 0024                   .dbline 0 ; func end
 0024 0C940000          xjmp _LCD_clear
 0028                   .dbend
 0028                   .dbfunc e syn7318InitDisplay _syn7318InitDisplay fV
                        .even
 0028           _syn7318InitDisplay::
 0028                   .dbline -1
 0028                   .dbline 51
 0028           ; }
 0028           ; 
 0028           ; //****************************************************************
 0028           ; //  显示语音模块初始化信息
 0028           ; //****************************************************************
 0028           ; void syn7318InitDisplay(void)
 0028           ; {
 0028                   .dbline 52
 0028           ;       DisplayCgrom(0x90,"语音模块");
 0028 20E0              ldi R18,<L5
 002A 30E0              ldi R19,>L5
 002C 00E9              ldi R16,144
 002E 0E940000          xcall _DisplayCgrom
 0032                   .dbline 53
 0032           ;       delay_nms(100);
 0032 04E6              ldi R16,100
 0034 10E0              ldi R17,0
 0036 0E940000          xcall _delay_nms
 003A                   .dbline 54
 003A           ;       DisplayCgrom(0x8a,"初始化中");
 003A 20E0              ldi R18,<L6
 003C 30E0              ldi R19,>L6
 003E 0AE8              ldi R16,138
 0040 0E940000          xcall _DisplayCgrom
 0044                   .dbline 55
 0044           ;       delay_nms(3000);
 0044 08EB              ldi R16,3000
 0046 1BE0              ldi R17,11
 0048 0E940000          xcall _delay_nms
 004C                   .dbline 56
 004C           ;       LCD_clear();                                  //清屏
 004C                   .dbline -2
 004C           L4:
 004C                   .dbline 0 ; func end
 004C 0C940000          xjmp _LCD_clear
 0050                   .dbend
 0050                   .dbfunc e init_devices _init_devices fV
                        .even
 0050           _init_devices::
 0050                   .dbline -1
 0050                   .dbline 62
 0050           ; }
 0050           ; 
 0050           ; 
 0050           ; //call this routine to initialize all peripherals
 0050           ; void init_devices(void)
 0050           ; {
 0050                   .dbline 64
 0050           ;     //stop errant interrupts until set up
 0050           ;     CLI(); //disable all interrupts
 0050 F894              cli
 0052                   .dbline 65
 0052           ;     XDIV  = 0x00; //xtal divider
 0052 2224              clr R2
 0054 2CBE              out 0x3c,R2
 0056                   .dbline 66
 0056           ;     XMCRA = 0x00; //external memory
 0056 20926D00          sts 109,R2
 005A                   .dbline 67
 005A           ;     UART0_Init();
 005A 0E940000          xcall _UART0_Init
 005E                   .dbline 69
 005E           ;     //UART1_Init();
 005E           ;     MCUCR = 0x00;
 005E 2224              clr R2
 0060 25BE              out 0x35,R2
 0062                   .dbline 70
 0062           ;     EICRA = 0x00; //extended ext ints
 0062 20926A00          sts 106,R2
 0066                   .dbline 71
 0066           ;     EICRB = 0x00; //extended ext ints
 0066 2ABE              out 0x3a,R2
 0068                   .dbline 72
 0068           ;     EIMSK = 0x00;
 0068 29BE              out 0x39,R2
 006A                   .dbline 73
 006A           ;     TIMSK = 0x00; //timer interrupt sources
 006A 27BE              out 0x37,R2
 006C                   .dbline 74
 006C           ;     ETIMSK = 0x00; //extended timer interrupt sources
 006C 20927D00          sts 125,R2
 0070                   .dbline 75
 0070           ;     SEI(); //re-enable interrupts
 0070 7894              sei
 0072                   .dbline -2
 0072           L7:
 0072                   .dbline 0 ; func end
 0072 0895              ret
 0074                   .dbend
 0074                   .dbfunc e main _main fV
 0074           ;           temp -> R20
 0074           ;        command -> R10
 0074           ;         u8temp -> R20
                        .even
 0074           _main::
 0074                   .dbline -1
 0074                   .dbline 83
 0074           ;     //all peripherals are now initialized
 0074           ; }
 0074           ; 
 0074           ; //***********************************************************************
 0074           ; //                    主程序
 0074           ; //***********************************************************************
 0074           ; void main(void)
 0074           ; {
 0074                   .dbline 89
 0074           ;     // volatile unsigned char temp;
 0074           ;       uchar u8temp;
 0074           ;     uchar command;
 0074           ;     uchar temp;   
 0074           ; 
 0074           ;     system_init();                                //系统初始化，设置IO口属性
 0074 0E940000          xcall _system_init
 0078                   .dbline 90
 0078           ;       delay_nms(100);                                //延时100ms
 0078 04E6              ldi R16,100
 007A 10E0              ldi R17,0
 007C 0E940000          xcall _delay_nms
 0080                   .dbline 91
 0080           ;       LCD_init();                                   //液晶参数初始化设置
 0080 0E940000          xcall _LCD_init
 0084                   .dbline 92
 0084           ;       LCD_clear();                                  //清屏
 0084 0E940000          xcall _LCD_clear
 0088                   .dbline 94
 0088           ;     
 0088           ;       ds1302_init();                                //DS1302初始化
 0088 0E940000          xcall _ds1302_init
 008C                   .dbline 95
 008C           ;       DS18B20_Reset();                                                  //复位D18B20
 008C 0E940000          xcall _DS18B20_Reset
 0090                   .dbline 96
 0090           ;       delay_nms(10);
 0090 0AE0              ldi R16,10
 0092 10E0              ldi R17,0
 0094 0E940000          xcall _delay_nms
 0098                   .dbline 98
 0098           ;       //ds1302_write_time();                        //向DS1302写初始数据，如年月和时间等
 0098           ;       welcomeDisplay();
 0098 B3DF              xcall _welcomeDisplay
 009A                   .dbline 99
 009A           ;       init_devices(); 
 009A DADF              xcall _init_devices
 009C                   .dbline 101
 009C           ;       
 009C           ;     SYN7318_init();                               //SYN7318语音识别模块 初始化
 009C 0E940000          xcall _SYN7318_init
 00A0                   .dbline 102
 00A0           ;     syn7318InitDisplay();
 00A0 C3DF              xcall _syn7318InitDisplay
 00A2                   .dbline 108
 00A2           ;        
 00A2           ; 
 00A2           ;     //updateWords();                                //SYN7318语音识别模块 词典更新                                                 
 00A2           ;     //SYN7318_welcome();
 00A2           ; 
 00A2           ;     updateWords();
 00A2 0E940000          xcall _updateWords
 00A6 C0C0              xjmp L10
 00A8           L9:
 00A8                   .dbline 110
 00A8           ; 
 00A8           ;     while(1) { 
 00A8                   .dbline 112
 00A8           ; 
 00A8           ;               displayDateTime();
 00A8 0E940000          xcall _displayDateTime
 00AC                   .dbline 113
 00AC           ;               LCD_write_temperature();
 00AC 0E940000          xcall _LCD_write_temperature
 00B0 21C0              xjmp L13
 00B2           L12:
 00B2                   .dbline 116
 00B2           ;         
 00B2           ;          //wifi
 00B2           ;         while(RxBufWr_wifi != RxBufRd_wifi) {
 00B2                   .dbline 117
 00B2           ;             LCD_write_com(0x98);
 00B2 08E9              ldi R16,152
 00B4 0E940000          xcall _LCD_write_com
 00B8                   .dbline 118
 00B8           ;             delay_nms(2);
 00B8 02E0              ldi R16,2
 00BA 10E0              ldi R17,0
 00BC 0E940000          xcall _delay_nms
 00C0                   .dbline 119
 00C0           ;             u8temp = RxCharBuf_wifi[RxBufRd_wifi];
 00C0 80E0              ldi R24,<_RxCharBuf_wifi
 00C2 90E0              ldi R25,>_RxCharBuf_wifi
 00C4 E0910000          lds R30,_RxBufRd_wifi
 00C8 FF27              clr R31
 00CA E80F              add R30,R24
 00CC F91F              adc R31,R25
 00CE 4081              ldd R20,z+0
 00D0                   .dbline 120
 00D0           ;             RxBufRd_wifi++;
 00D0 80910000          lds R24,_RxBufRd_wifi
 00D4 8F5F              subi R24,255    ; addi 1
 00D6 80930000          sts _RxBufRd_wifi,R24
 00DA                   .dbline 121
 00DA           ;             RxBufRd_wifi &= 0x0f;
 00DA 8F70              andi R24,15
 00DC 80930000          sts _RxBufRd_wifi,R24
 00E0                   .dbline 122
 00E0           ;             if(u8temp == 0x0d) break;
 00E0 4D30              cpi R20,13
 00E2 09F4              brne L15
 00E4           X0:
 00E4                   .dbline 122
 00E4 0DC0              xjmp L14
 00E6           L15:
 00E6                   .dbline 123
 00E6           ;             LCD_write_data(u8temp);
 00E6 042F              mov R16,R20
 00E8 0E940000          xcall _LCD_write_data
 00EC                   .dbline 124
 00EC           ;             delay_nms(2);
 00EC 02E0              ldi R16,2
 00EE 10E0              ldi R17,0
 00F0 0E940000          xcall _delay_nms
 00F4                   .dbline 126
 00F4           ;             //DisplayCgrom(0x98, &u8temp);
 00F4           ;         }
 00F4           L13:
 00F4                   .dbline 116
 00F4 20900000          lds R2,_RxBufRd_wifi
 00F8 30900000          lds R3,_RxBufWr_wifi
 00FC 3214              cp R3,R2
 00FE C9F6              brne L12
 0100           X1:
 0100           L14:
 0100                   .dbline 129
 0100           ; 
 0100           ; 
 0100           ;         startRecognition();
 0100 0E940000          xcall _startRecognition
 0104                   .dbline 130
 0104           ;         command = checkSendReturn();
 0104 0E940000          xcall _checkSendReturn
 0108 A02E              mov R10,R16
 010A                   .dbline 132
 010A           ;         
 010A           ;         switch(command){
 010A 4A2D              mov R20,R10
 010C 5527              clr R21
 010E 4130              cpi R20,1
 0110 E0E0              ldi R30,0
 0112 5E07              cpc R21,R30
 0114 09F4              brne X12
 0116 4DC0              xjmp L29
 0118           X12:
 0118           X2:
 0118 4230              cpi R20,2
 011A E0E0              ldi R30,0
 011C 5E07              cpc R21,R30
 011E 09F4              brne X13
 0120 54C0              xjmp L31
 0122           X13:
 0122           X3:
 0122 4330              cpi R20,3
 0124 E0E0              ldi R30,0
 0126 5E07              cpc R21,R30
 0128 09F4              brne X14
 012A 7EC0              xjmp L18
 012C           X14:
 012C           X4:
 012C 4430              cpi R20,4
 012E E0E0              ldi R30,0
 0130 5E07              cpc R21,R30
 0132 B9F0              breq L21
 0134           X5:
 0134 4530              cpi R20,5
 0136 E0E0              ldi R30,0
 0138 5E07              cpc R21,R30
 013A E9F0              breq L23
 013C           X6:
 013C 4630              cpi R20,6
 013E E0E0              ldi R30,0
 0140 5E07              cpc R21,R30
 0142 69F1              breq L27
 0144           X7:
 0144 4730              cpi R20,7
 0146 E0E0              ldi R30,0
 0148 5E07              cpc R21,R30
 014A F9F0              breq L25
 014C           X8:
 014C 4130              cpi R20,1
 014E E0E0              ldi R30,0
 0150 5E07              cpc R21,R30
 0152 0CF4              brge X15
 0154 4EC0              xjmp L17
 0156           X15:
 0156           X9:
 0156           L36:
 0156 4436              cpi R20,100
 0158 E0E0              ldi R30,0
 015A 5E07              cpc R21,R30
 015C 09F4              brne X16
 015E 3FC0              xjmp L33
 0160           X16:
 0160           X10:
 0160 48C0              xjmp L17
 0162           L21:
 0162                   .dbline 137
 0162           ;             case OVER_TIME :
 0162           ;                 break;
 0162           ;             case 0x04 :
 0162           ;                 //SYN7318_Error();
 0162           ;                 DisplayCgrom(0x88,"语音超时");
 0162 20E0              ldi R18,<L22
 0164 30E0              ldi R19,>L22
 0166 08E8              ldi R16,136
 0168 0E940000          xcall _DisplayCgrom
 016C                   .dbline 138
 016C           ;                 delay_nms(2);
 016C 02E0              ldi R16,2
 016E 10E0              ldi R17,0
 0170 0E940000          xcall _delay_nms
 0174                   .dbline 139
 0174           ;                 break;
 0174 59C0              xjmp L18
 0176           L23:
 0176                   .dbline 142
 0176           ;             case 0x05 :
 0176           ;                 //SYN7318_Error();
 0176           ;                 DisplayCgrom(0x88,"识别拒识");
 0176 20E0              ldi R18,<L24
 0178 30E0              ldi R19,>L24
 017A 08E8              ldi R16,136
 017C 0E940000          xcall _DisplayCgrom
 0180                   .dbline 143
 0180           ;                 delay_nms(2);
 0180 02E0              ldi R16,2
 0182 10E0              ldi R17,0
 0184 0E940000          xcall _delay_nms
 0188                   .dbline 144
 0188           ;                 break;
 0188 4FC0              xjmp L18
 018A           L25:
 018A                   .dbline 147
 018A           ;             case 0x07 :
 018A           ;                 //SYN7318_Error();
 018A           ;                 DisplayCgrom(0x88,"识别拒识一");
 018A 20E0              ldi R18,<L26
 018C 30E0              ldi R19,>L26
 018E 08E8              ldi R16,136
 0190 0E940000          xcall _DisplayCgrom
 0194                   .dbline 148
 0194           ;                 delay_nms(2);
 0194 02E0              ldi R16,2
 0196 10E0              ldi R17,0
 0198 0E940000          xcall _delay_nms
 019C                   .dbline 149
 019C           ;                 break;
 019C 45C0              xjmp L18
 019E           L27:
 019E                   .dbline 152
 019E           ;             case 0x06 :
 019E           ;                 //SYN7318_Error();
 019E           ;                 DisplayCgrom(0x88,"识别内部错误");
 019E 20E0              ldi R18,<L28
 01A0 30E0              ldi R19,>L28
 01A2 08E8              ldi R16,136
 01A4 0E940000          xcall _DisplayCgrom
 01A8                   .dbline 153
 01A8           ;                 delay_nms(2);
 01A8 02E0              ldi R16,2
 01AA 10E0              ldi R17,0
 01AC 0E940000          xcall _delay_nms
 01B0                   .dbline 154
 01B0           ;                 break;
 01B0 3BC0              xjmp L18
 01B2           L29:
 01B2                   .dbline 156
 01B2           ;             case 1 :
 01B2           ;                 DisplayCgrom(0x8C,"救命");
 01B2 20E0              ldi R18,<L30
 01B4 30E0              ldi R19,>L30
 01B6 0CE8              ldi R16,140
 01B8 0E940000          xcall _DisplayCgrom
 01BC                   .dbline 157
 01BC           ;                 delay_nms(2);
 01BC 02E0              ldi R16,2
 01BE 10E0              ldi R17,0
 01C0 0E940000          xcall _delay_nms
 01C4                   .dbline 159
 01C4           ;                 //wifi_SENDMSG();
 01C4           ;                 wifi_Restart();
 01C4 0E940000          xcall _wifi_Restart
 01C8                   .dbline 160
 01C8           ;                 break;
 01C8 2FC0              xjmp L18
 01CA           L31:
 01CA                   .dbline 162
 01CA           ;             case 2 :
 01CA           ;                 DisplayCgrom(0x8C,"哎呦");
 01CA 20E0              ldi R18,<L32
 01CC 30E0              ldi R19,>L32
 01CE 0CE8              ldi R16,140
 01D0 0E940000          xcall _DisplayCgrom
 01D4                   .dbline 163
 01D4           ;                 delay_nms(2);
 01D4 02E0              ldi R16,2
 01D6 10E0              ldi R17,0
 01D8 0E940000          xcall _delay_nms
 01DC                   .dbline 164
 01DC           ;                 break;
 01DC 25C0              xjmp L18
 01DE           L33:
 01DE                   .dbline 166
 01DE           ;             case 100 :
 01DE           ;                 DisplayCgrom(0x8C,"温度");
 01DE 20E0              ldi R18,<L34
 01E0 30E0              ldi R19,>L34
 01E2 0CE8              ldi R16,140
 01E4 0E940000          xcall _DisplayCgrom
 01E8                   .dbline 167
 01E8           ;                 delay_nms(2);
 01E8 02E0              ldi R16,2
 01EA 10E0              ldi R17,0
 01EC 0E940000          xcall _delay_nms
 01F0                   .dbline 168
 01F0           ;                 break;
 01F0 1BC0              xjmp L18
 01F2           L17:
 01F2                   .dbline 170
 01F2           ;             default :
 01F2           ;                 DisplayCgrom(0x8C,"识别成功");
 01F2 20E0              ldi R18,<L35
 01F4 30E0              ldi R19,>L35
 01F6 0CE8              ldi R16,140
 01F8 0E940000          xcall _DisplayCgrom
 01FC                   .dbline 171
 01FC           ;                 delay_nms(2);
 01FC 02E0              ldi R16,2
 01FE 10E0              ldi R17,0
 0200 0E940000          xcall _delay_nms
 0204                   .dbline 172
 0204           ;                 LCD_write_com(0x8C);
 0204 0CE8              ldi R16,140
 0206 0E940000          xcall _LCD_write_com
 020A                   .dbline 173
 020A           ;                   delay_nms(2);
 020A 02E0              ldi R16,2
 020C 10E0              ldi R17,0
 020E 0E940000          xcall _delay_nms
 0212                   .dbline 174
 0212           ;                 temp = (command >> 4) + '0';          //在LCD上写要显示的数据 
 0212 4A2D              mov R20,R10
 0214 4295              swap R20
 0216 4F70              andi R20,#0x0F
 0218 405D              subi R20,208    ; addi 48
 021A                   .dbline 175
 021A           ;                 LCD_write_data(temp);
 021A 042F              mov R16,R20
 021C 0E940000          xcall _LCD_write_data
 0220                   .dbline 176
 0220           ;                 delay_nms(2);
 0220 02E0              ldi R16,2
 0222 10E0              ldi R17,0
 0224 0E940000          xcall _delay_nms
 0228                   .dbline 177
 0228           ;                 break;
 0228           L18:
 0228                   .dbline 181
 0228           ;         }
 0228           ; 
 0228           ;         //if(command == )
 0228           ;       }
 0228           L10:
 0228                   .dbline 110
 0228 3FCF              xjmp L9
 022A           X11:
 022A                   .dbline -2
 022A           L8:
 022A                   .dbline 0 ; func end
 022A 0895              ret
 022C                   .dbsym r temp 20 c
 022C                   .dbsym r command 10 c
 022C                   .dbsym r u8temp 20 c
 022C                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile E:\git\AVR\OldManAlarm\main.c
 0000           L35:
 0000                   .blkb 9
                        .area idata
 0000 CAB6B1F0B3C9B9A600        .byte 202,182,177,240,179,201,185,166,0
                        .area data(ram, con, rel)
 0009                   .dbfile E:\git\AVR\OldManAlarm\main.c
 0009           L34:
 0009                   .blkb 5
                        .area idata
 0009 CEC2B6C800        .byte 206,194,182,200,0
                        .area data(ram, con, rel)
 000E                   .dbfile E:\git\AVR\OldManAlarm\main.c
 000E           L32:
 000E                   .blkb 5
                        .area idata
 000E B0A5DFCF00        .byte 176,165,223,207,0
                        .area data(ram, con, rel)
 0013                   .dbfile E:\git\AVR\OldManAlarm\main.c
 0013           L30:
 0013                   .blkb 5
                        .area idata
 0013 BEC8C3FC00        .byte 190,200,195,252,0
                        .area data(ram, con, rel)
 0018                   .dbfile E:\git\AVR\OldManAlarm\main.c
 0018           L28:
 0018                   .blkb 13
                        .area idata
 0018 CAB6B1F0C4DAB2BFB4EDCEF300        .byte 202,182,177,240,196,218,178,191,180,237,206,243,0
                        .area data(ram, con, rel)
 0025                   .dbfile E:\git\AVR\OldManAlarm\main.c
 0025           L26:
 0025                   .blkb 11
                        .area idata
 0025 CAB6B1F0BEDCCAB6D2BB00    .byte 202,182,177,240,190,220,202,182,210,187,0
                        .area data(ram, con, rel)
 0030                   .dbfile E:\git\AVR\OldManAlarm\main.c
 0030           L24:
 0030                   .blkb 9
                        .area idata
 0030 CAB6B1F0BEDCCAB600        .byte 202,182,177,240,190,220,202,182,0
                        .area data(ram, con, rel)
 0039                   .dbfile E:\git\AVR\OldManAlarm\main.c
 0039           L22:
 0039                   .blkb 9
                        .area idata
 0039 D3EFD2F4B3ACCAB100        .byte 211,239,210,244,179,172,202,177,0
                        .area data(ram, con, rel)
 0042                   .dbfile E:\git\AVR\OldManAlarm\main.c
 0042           L6:
 0042                   .blkb 9
                        .area idata
 0042 B3F5CABCBBAFD6D000        .byte 179,245,202,188,187,175,214,208,0
                        .area data(ram, con, rel)
 004B                   .dbfile E:\git\AVR\OldManAlarm\main.c
 004B           L5:
 004B                   .blkb 9
                        .area idata
 004B D3EFD2F4C4A3BFE900        .byte 211,239,210,244,196,163,191,233,0
                        .area data(ram, con, rel)
 0054                   .dbfile E:\git\AVR\OldManAlarm\main.c
 0054           L3:
 0054                   .blkb 9
                        .area idata
 0054 D4A4BEAFCFB5CDB300        .byte 212,164,190,175,207,181,205,179,0
                        .area data(ram, con, rel)
 005D                   .dbfile E:\git\AVR\OldManAlarm\main.c
 005D           L2:
 005D                   .blkb 17
                        .area idata
 005D BBB6D3ADCAB9D3C3B6C0BED3C0CFC8CB  .byte 187,182,211,173,202,185,211,195,182,192,190,211,192,207,200,203
 006D 00                .byte 0
                        .area data(ram, con, rel)
 006E                   .dbfile E:\git\AVR\OldManAlarm\main.c
 006E           ; }
 006E           ; 
